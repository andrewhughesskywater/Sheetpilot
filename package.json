{
  "name": "sheetpilot",
  "version": "1.3.6",
  "description": "Business timesheet management and reporting tool",
  "author": "Andrew Hughes",
  "repository": {
    "type": "git",
    "url": "https://github.com/andrewhughesskywater/Sheetpilot.git"
  },
  "main": "build/dist/backend/src/main.js",
  "scripts": {
    "postinstall": "electron-builder install-app-deps && cd app/backend && npm install",
    "electron:compiled": "npm run rebuild && cross-env NODE_PATH=app/backend/node_modules;node_modules electron build/dist/backend/src/main.js",
    "rebuild": "npx @electron/rebuild -f --version=38.4.0 --module-dir app/backend/node_modules/better-sqlite3",
    "sync-version": "node scripts/sync-version.js",
    "build:main": "npm run sync-version && tsc app/backend/src/main.ts app/backend/src/preload.ts --outDir build/dist --rootDir app --target ES2022 --module CommonJS --moduleResolution Node --esModuleInterop --allowSyntheticDefaultImports --skipLibCheck",
    "vite": "cd app/frontend && npm run dev",
    "dev": "concurrently -k -n VITE,ELECTRON -c auto \"npm:vite\" \"wait-on tcp:5173 && npm run build:main && cross-env ELECTRON_IS_DEV=1 npm run electron:compiled\"",
    "dev:hot": "concurrently -k -n VITE,ELECTRON -c auto \"npm:vite\" \"wait-on tcp:5173 && npm run build:main && cross-env ELECTRON_IS_DEV=1 npm run dev:main\"",
    "dev:main": "nodemon --watch app/backend/src/main.ts --watch app/backend/src/preload.ts --exec \"npm run build:main && cross-env ELECTRON_IS_DEV=1 NODE_PATH=app/backend/node_modules;node_modules electron build/dist/backend/src/main.js\"",
    "build:renderer": "npm run sync-version && cd app/frontend && npm run build",
    "build:bot": "cd app/backend/src/services/bot && npm run build",
    "install:browsers": "cross-env PLAYWRIGHT_BROWSERS_PATH=build/playwright-browsers npx playwright install chromium",
    "build": "npm run build:main && npm run build:renderer && npm run build:bot && npm run install:browsers && cross-env CSC_IDENTITY_AUTO_DISCOVERY=false electron-builder",
    "type-check": "npm run type-check:root && npm run type-check:frontend",
    "type-check:root": "tsc --noEmit --project tsconfig.typecheck.json",
    "type-check:frontend": "cd app/frontend && tsc -b --noEmit",
    "typecheck": "npm run typecheck:root && cd app/frontend && npm run typecheck && cd ../backend && npm run typecheck && cd src/services/bot && npm run typecheck",
    "typecheck:root": "tsc --noEmit --project tsconfig.typecheck.json",
    "lint": "eslint . --ext .ts,.tsx",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "test": "npm run test:smoke && npm run test:unit && npm run test:integration && npm run test:e2e && npm run test:renderer && npm run test:blank-screen && npm run test:bot",
    "test:unit": "cross-env VITEST=true vitest run --config app/backend/tests/vitest.config.ts",
    "test:watch": "cross-env VITEST=true vitest --config app/backend/tests/vitest.config.ts",
    "test:e2e": "cross-env VITEST=true vitest run --config app/backend/tests/vitest.config.e2e.ts",
    "test:integration": "cross-env VITEST=true vitest run --config app/backend/tests/vitest.config.integration.ts",
    "test:smoke": "cross-env VITEST=true vitest run --config app/backend/tests/vitest.config.smoke.ts",
    "test:blank-screen": "cd app/frontend && npm test:run -- --config ../tests/vitest.config.blank-screen-prevention.ts",
    "test:blank-screen:watch": "cd app/frontend && npm test -- --config ../tests/vitest.config.blank-screen-prevention.ts --watch",
    "test:renderer": "cd app/frontend && npm run test:run",
    "test:renderer:watch": "cd app/frontend && npm test -- --watch",
    "test:bot": "cd app/backend/src/services/bot && npm test",
    "install:bot": "cd app/backend/src/services/bot && npm install",
    "install:backend": "cd app/backend && npm install",
    "clean": "rimraf build/dist && cd app/backend/src/services/bot && npm run clean",
    "ci:smoke": "npm run build:main && npm run build:renderer && cross-env SMOKE_PACKAGED=1 ELECTRON_IS_DEV=0 node_modules/.bin/electron build/dist/backend/src/main.js",
    "build:dir": "npm run build:main && npm run build:renderer && cross-env CSC_IDENTITY_AUTO_DISCOVERY=false electron-builder --dir",
    "ci:dir": "npm run build:dir && node scripts/ci-dir.js"
  },
  "build": {
    "appId": "com.sheetpilot.app",
    "productName": "Sheetpilot",
    "artifactName": "${productName}-Setup.${ext}",
    "icon": "app/frontend/src/assets/images/icon.ico",
    "files": [
      "build/dist/**/*",
      "app/backend/src/services/bot/dist/**/*",
      "app/backend/src/services/bot/package.json",
      "app/backend/src/services/bot/node_modules/**/*",
      "app/backend/package.json",
      "app/backend/node_modules/**/*",
      "app/frontend/dist/**/*",
      "app/frontend/src/assets/images/icon.ico",
      "!node_modules/.cache/**",
      "!app/frontend/node_modules/**",
      "!app/backend/node_modules/.cache/**",
      "!app/backend/src/services/bot/node_modules/.cache/**"
    ],
    "directories": {
      "output": "build"
    },
    "asarUnpack": [
      "app/backend/node_modules/electron-updater/**/*"
    ],
    "extraResources": [
      {
        "from": "app/frontend/src/assets/images/icon.ico",
        "to": "icon.ico"
      },
      {
        "from": "build/playwright-browsers",
        "to": "playwright-browsers",
        "filter": ["**/*"]
      }
    ],
    "mac": {
      "category": "public.app-category.productivity"
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": ["x64"]
        }
      ],
      "icon": "app/frontend/src/assets/images/icon.ico",
      "forceCodeSigning": false,
      "signAndEditExecutable": false,
      "requestedExecutionLevel": "asInvoker"
    },
    "nsis": {
      "oneClick": true,
      "perMachine": false,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "installerIcon": "app/frontend/src/assets/images/icon.ico",
      "uninstallerIcon": "app/frontend/src/assets/images/icon.ico",
      "installerHeader": "app/frontend/src/assets/images/icon.ico",
      "installerHeaderIcon": "app/frontend/src/assets/images/icon.ico"
    },
    "linux": {
      "target": "AppImage"
    },
    "publish": {
      "provider": "github",
      "owner": "andrewhughesskywater",
      "repo": "Sheetpilot"
    }
  },
  "dependencies": {
    "@handsontable/react-wrapper": "^16.1.1",
    "handsontable": "^16.1.1",
    "playwright": "^1.56.1"
  },
  "devDependencies": {
    "@electron/rebuild": "^4.0.1",
    "@eslint/js": "^9.37.0",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@types/node": "^24.5.2",
    "electron-log": "^5.4.3",
    "electron-updater": "^6.6.2",
    "@typescript-eslint/eslint-plugin": "^8.46.0",
    "@typescript-eslint/parser": "^8.46.0",
    "@vitejs/plugin-react": "^5.0.4",
    "concurrently": "^9.2.1",
    "cross-env": "^10.1.0",
    "electron": "^38.4.0",
    "electron-builder": "^26.0.12",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^6.1.1",
    "eslint-plugin-react-refresh": "^0.4.23",
    "jsdom": "^27.0.0",
    "nodemon": "^3.1.10",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "rimraf": "^6.0.1",
    "typescript": "^5.9.2",
    "vite": "^7.1.7",
    "vitest": "^3.2.4",
    "wait-on": "^9.0.1"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
